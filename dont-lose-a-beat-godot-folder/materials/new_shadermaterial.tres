[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="VisualShaderNodeScalarConstant" id=2]
constant = 0.3

[sub_resource type="VisualShaderNodeColorFunc" id=4]
default_input_values = [ 0, Vector3( 1, 1, 1 ) ]

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// ColorFunc:4
	vec3 n_in4p0 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out4p0;
	{
		vec3 c = n_in4p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		float max3 = max(max1, max2);
		n_out4p0 = vec3(max3, max3, max3);
	}

// Scalar:3
	float n_out3p0 = 0.300000;

// Output:0
	ALBEDO = n_out4p0;
	ALPHA = n_out3p0;

}

void light() {
// Output:0

}
"
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 100, 320 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( 40, 200 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 1, 4, 0, 0, 0 )

[resource]
shader = SubResource( 3 )
