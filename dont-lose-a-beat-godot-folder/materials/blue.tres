[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[ext_resource path="res://textures/tempocontroll_left.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 0.6 ]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 1, 1, 1, 0.313726 )

[sub_resource type="VisualShader" id=2]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_6;



void vertex() {
// Output:0

}

void fragment() {
// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, UV.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// Color:8
	vec3 n_out8p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out8p1 = 0.313726;

// ScalarOp:7
	float n_out7p0 = n_out6p1 * n_out8p1;

// Output:0
	ALPHA = n_out7p0;
	EMISSION = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -469, 126 )
nodes/fragment/0/position = Vector2( 420, 140 )
nodes/fragment/6/node = SubResource( 3 )
nodes/fragment/6/position = Vector2( -360, 360 )
nodes/fragment/7/node = SubResource( 4 )
nodes/fragment/7/position = Vector2( 180, 340 )
nodes/fragment/8/node = SubResource( 5 )
nodes/fragment/8/position = Vector2( -40, 180 )
nodes/fragment/connections = PoolIntArray( 6, 0, 0, 5, 6, 1, 7, 0, 7, 0, 0, 1, 8, 1, 7, 1 )

[resource]
shader = SubResource( 2 )
